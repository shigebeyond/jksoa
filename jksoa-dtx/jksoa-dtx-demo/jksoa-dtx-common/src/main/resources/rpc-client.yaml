# 客户端配置
duplex: true # 是否双工, 就是双向rpc, 就是server也可以调用client, 但是client不在注册中心注册
serializer: fst # 序列器类型
loadbalancer: random # 均衡负载类型
shardingStrategy: average # 批量请求的分片策略
servicePackages: # service类所在的包路径
    - net.jkcode.jksoa.dtx.demo # dtx组件的demo的服务
interceptors: # 拦截器
    - net.jkcode.jksoa.dtx.tcc.interceptor.RpcClientTccInterceptor
connectTimeoutMillis: 500000 # 连接超时，int类型，单位：毫秒
requestTimeoutMillis: !!java.lang.Long 5000000 # 请求超时，Long类型，单位：毫秒
maxTryCount: 2 # 最大尝试次数, 用于支持失败重试, 用在 RetryRpcResponseFuture
reuseConnection: true # 是否复用连接: 1 true: 则使用连接 ReconnectableConnection 2 false: 则使用连接 PooledConnection
lazyConnect: false # 是否延迟创建连接
minPooledConnections: 2 # 池化连接的最小数, 用在 PooledConnection
maxPooledConnections: 10 # 池化连接的最大数, 用在 PooledConnection
ioThreads: 0 # IO线程数, 用于执行非阻塞的io事件, 如为0 则为核数